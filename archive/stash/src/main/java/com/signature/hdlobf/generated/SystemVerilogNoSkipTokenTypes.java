// $ANTLR 2.7.4: "SystemVerilogLexer.g" -> "SystemVerilogNoSkipLexer.java"$
package com.signature.hdlobf.generated;

public interface SystemVerilogNoSkipTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int ALIAS = 4;
	int ALWAYS = 5;
	int ALWAYS_COMB = 6;
	int ALWAYS_FF = 7;
	int ALWAYS_LATCH = 8;
	int AND = 9;
	int ASSERT = 10;
	int ASSIGN = 11;
	int ASSUME = 12;
	int AUTOMATIC = 13;
	int BEFORE = 14;
	int BEGIN = 15;
	int BIND = 16;
	int BINS = 17;
	int BINSOF = 18;
	int BIT = 19;
	int BREAK = 20;
	int BUF = 21;
	int BUFIF0 = 22;
	int BUFIF1 = 23;
	int BYTE = 24;
	int CASE = 25;
	int CASEX = 26;
	int CASEZ = 27;
	int CELL = 28;
	int CHANDLE = 29;
	int CLASS = 30;
	int CLOCKING = 31;
	int CMOS = 32;
	int CONFIG = 33;
	int CONST = 34;
	int CONSTRAINT = 35;
	int CONTEXT = 36;
	int CONTINUE = 37;
	int COVER = 38;
	int COVERGROUP = 39;
	int COVERPOINT = 40;
	int CROSS = 41;
	int DEASSIGN = 42;
	int DEFAULT = 43;
	int DEFPARAM = 44;
	int DESIGN = 45;
	int DISABLE = 46;
	int DIST = 47;
	int DO = 48;
	int EDGE = 49;
	int ELSE = 50;
	int END = 51;
	int ENDCASE = 52;
	int ENDCLASS = 53;
	int ENDCLOCKING = 54;
	int ENDCONFIG = 55;
	int ENDFUNCTION = 56;
	int ENDGENERATE = 57;
	int ENDGROUP = 58;
	int ENDINTERFACE = 59;
	int ENDMODULE = 60;
	int ENDPACKAGE = 61;
	int ENDPRIMITIVE = 62;
	int ENDPROGRAM = 63;
	int ENDPROPERTY = 64;
	int ENDSPECIFY = 65;
	int ENDSEQUENCE = 66;
	int ENDTABLE = 67;
	int ENDTASK = 68;
	int ENUM = 69;
	int EVENT = 70;
	int EXPECT = 71;
	int EXPORT = 72;
	int EXTENDS = 73;
	int EXTERN = 74;
	int FINAL = 75;
	int FIRST_MATCH = 76;
	int FOR = 77;
	int FORCE = 78;
	int FOREACH = 79;
	int FOREVER = 80;
	int FORK = 81;
	int FORKJOIN = 82;
	int FUNCTION = 83;
	int GENERATE = 84;
	int GENVAR = 85;
	int HIGHZ0 = 86;
	int HIGHZ1 = 87;
	int IF = 88;
	int IFF = 89;
	int IFNONE = 90;
	int IGNORE_BINS = 91;
	int ILLEGAL_BINS = 92;
	int IMPORT = 93;
	int INCDIR = 94;
	int INCLUDE = 95;
	int INITIAL = 96;
	int INOUT = 97;
	int INPUT = 98;
	int INSIDE = 99;
	int INSTANCE = 100;
	int INT = 101;
	int INTEGER = 102;
	int INTERFACE = 103;
	int INTERSECT = 104;
	int JOIN = 105;
	int JOIN_ANY = 106;
	int JOIN_NONE = 107;
	int LARGE = 108;
	int LIBLIST = 109;
	int LIBRARY = 110;
	int LOCAL = 111;
	int LOCALPARAM = 112;
	int LOGIC = 113;
	int LONGINT = 114;
	int MACROMODULE = 115;
	int MATCHES = 116;
	int MEDIUM = 117;
	int MODPORT = 118;
	int MODULE = 119;
	int NAND = 120;
	int NEGEDGE = 121;
	int NEW = 122;
	int NMOS = 123;
	int NOR = 124;
	int NOSHOWCANCELLED = 125;
	int NOT = 126;
	int NOTIF0 = 127;
	int NOTIF1 = 128;
	int NULL = 129;
	int OR = 130;
	int OUTPUT = 131;
	int PACKAGE = 132;
	int PACKED = 133;
	int PARAMETER = 134;
	int PMOS = 135;
	int POSEDGE = 136;
	int PRIMITIVE = 137;
	int PRIORITY = 138;
	int PROGRAM = 139;
	int PROPERTY = 140;
	int PROTECTED = 141;
	int PULL0 = 142;
	int PULL1 = 143;
	int PULLDOWN = 144;
	int PULLUP = 145;
	int PULSESTYLE_ONEVENT = 146;
	int PULSESTYLE_ONDETEC = 147;
	int PURE = 148;
	int RAND = 149;
	int RANDC = 150;
	int RANDCASE = 151;
	int RANDSEQUENCE = 152;
	int RCMOS = 153;
	int REAL = 154;
	int REALTIME = 155;
	int REF = 156;
	int REG = 157;
	int RELEASE = 158;
	int REPEAT = 159;
	int RETURN = 160;
	int RNMOS = 161;
	int RPMOS = 162;
	int RTRAN = 163;
	int RTRANIF0 = 164;
	int RTRANIF1 = 165;
	int SCALARED = 166;
	int SEQUENCE = 167;
	int SHORTINT = 168;
	int SHORTREAL = 169;
	int SHOWCANCELLED = 170;
	int SIGNED = 171;
	int SMALL = 172;
	int SOLVE = 173;
	int SPECIFY = 174;
	int SPECPARAM = 175;
	int STATIC = 176;
	int STRINGDECLARATION = 177;
	int STRONG0 = 178;
	int STRONG1 = 179;
	int STRUCT = 180;
	int SUPER = 181;
	int SUPPLY0 = 182;
	int SUPPLY1 = 183;
	int TABLE = 184;
	int TAGGED = 185;
	int TASK = 186;
	int THIS = 187;
	int THROUGHOUT = 188;
	int TIME = 189;
	int TIMEPRECISION = 190;
	int TIMEUNIT = 191;
	int TRAN = 192;
	int TRANIF0 = 193;
	int TRANIF1 = 194;
	int TRI = 195;
	int TRI0 = 196;
	int TRI1 = 197;
	int TRIAND = 198;
	int TRIOR = 199;
	int TRIREG = 200;
	int TYPE = 201;
	int TYPEDEF = 202;
	int UNION = 203;
	int UNIQUE = 204;
	int UNSIGNED = 205;
	int USE = 206;
	int VAR = 207;
	int VECTORED = 208;
	int VIRTUAL = 209;
	int VOID = 210;
	int WAIT = 211;
	int WAIT_ORDER = 212;
	int WAND = 213;
	int WEAK0 = 214;
	int WEAK1 = 215;
	int WHILE = 216;
	int WILDCARD = 217;
	int WIRE = 218;
	int WITH = 219;
	int WITHIN = 220;
	int WOR = 221;
	int XNOR = 222;
	int XOR = 223;
	int OPTION = 224;
	int TYPE_OPTION = 225;
	int PATHPLUSDOLLAR = 226;
	int FULLSKEW = 227;
	int HOLD = 228;
	int NOCHANGE = 229;
	int PERIOD = 230;
	int RECOVERY = 231;
	int RECREM = 232;
	int REMOVAL = 233;
	int ROOT = 234;
	int SETUP = 235;
	int SETUPHOLD = 236;
	int SKEW = 237;
	int TIMESKEW = 238;
	int UNIT = 239;
	int WIDTH = 240;
	int RANDOMIZE = 241;
	int UNDERSCORE = 242;
	int DPIDECLERATION = 243;
	int TIME_UNIT_S = 244;
	int TIME_UNIT_MS = 245;
	int TIME_UNIT_US = 246;
	int TIME_UNIT_NS = 247;
	int TIME_UNIT_PS = 248;
	int TIME_UNIT_FS = 249;
	int TIME_UNIT_STEP = 250;
	int AT = 251;
	int COLON = 252;
	int COMMA = 253;
	int DOT = 254;
	int ASSINGMENT = 255;
	int MINUS = 256;
	int MINUSMINUS = 257;
	int LBRACK = 258;
	int RBRACK = 259;
	int LCURLY = 260;
	int RCURLY = 261;
	int LPAREN = 262;
	int RPAREN = 263;
	int POUND = 264;
	int QUESTION = 265;
	int SEMI = 266;
	int PLUS = 267;
	int PLUSPLUS = 268;
	int LNOT = 269;
	int BNOT = 270;
	int BAND = 271;
	int RNAND = 272;
	int BOR = 273;
	int RNOR = 274;
	int BXOR = 275;
	int RXNOR = 276;
	int DIV = 277;
	int FORWARD = 278;
	int TRIGGER = 279;
	int PPATH = 280;
	int FPATH = 281;
	int COLONEQ = 282;
	int COLONDIV = 283;
	int COLONCOLON = 284;
	int DOLLAR = 285;
	int OR_TRIGGER = 286;
	int POUNDPOUND = 287;
	int OR_PPATH = 288;
	int BRACE_STAR = 289;
	int BRACE_EQ = 290;
	int BRACE_TRIGGER = 291;
	int ATAT = 292;
	int DOTSTAR = 293;
	int TRIGGER_GT = 294;
	int PLUSEQ = 295;
	int TRIPLEAND = 296;
	int MULT = 297;
	int PERCENT = 298;
	int EQEQ = 299;
	int NOTEQ = 300;
	int EQEQEQ = 301;
	int NOTEQEQ = 302;
	int EQQUESTEQ = 303;
	int NOTQUESTEQ = 304;
	int ANDAND = 305;
	int OROR = 306;
	int MULTMULT = 307;
	int LE = 308;
	int LEEQ = 309;
	int GT = 310;
	int GTEQ = 311;
	int GTGT = 312;
	int LELE = 313;
	int GTGTGT = 314;
	int LELELE = 315;
	int MINUSEQ = 316;
	int MULTEQ = 317;
	int DIVEQ = 318;
	int PERCENTEQ = 319;
	int ANDEQ = 320;
	int OREQ = 321;
	int XOREQ = 322;
	int LELEEQ = 323;
	int GTGTEQ = 324;
	int LELELEEQ = 325;
	int GTGTGTEQ = 326;
	int MINUSCOLON = 327;
	int PLUSCOLON = 328;
	int ONE_LINE_COMMENT = 329;
	int BLOCK_COMMENT = 330;
	int SIZED_NUMBER = 331;
	int SIZE = 332;
	int BASE = 333;
	int SIZED_DIGIT = 334;
	int UNSIZED_NUMBER = 335;
	int DIGIT = 336;
	int HEXDIGIT = 337;
	int EXPONENT = 338;
	int CONST_LITERAL = 339;
	int NUMBER = 340;
	int WHITE_SPACE = 341;
	int ESCAPED_IDENTIFIER = 342;
	int STRING = 343;
	int SIMPLE_IDENTIFIER = 344;
	int SYSTEM_TF_IDENTIFIER = 345;
	int COMPILER_DIRECTIVE = 346;
}
